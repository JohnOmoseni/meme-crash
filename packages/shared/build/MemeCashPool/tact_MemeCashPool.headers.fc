;;
;; Header files for MemeCashPool
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $InternalAddTons$_store
builder $InternalAddTons$_store(builder build_0, (int, slice) v) inline;

;; $InternalAddTons$_store_cell
cell $InternalAddTons$_store_cell((int, slice) v) inline;

;; $InternalSubTons$_store
builder $InternalSubTons$_store(builder build_0, (slice) v) inline;

;; $InternalSubTons$_store_cell
cell $InternalSubTons$_store_cell((slice) v) inline;

;; $Predict$_load
(slice, ((int, int, int, int))) $Predict$_load(slice sc_0) inline;

;; $Withdraw$_load
(slice, ((int))) $Withdraw$_load(slice sc_0) inline;

;; $Claim$_load
(slice, ((int, slice))) $Claim$_load(slice sc_0) inline;

;; $NewPredictionEvent$_store
builder $NewPredictionEvent$_store(builder build_0, (int, int, int, slice) v) inline;

;; $NewPredictionEvent$_store_cell
cell $NewPredictionEvent$_store_cell((int, int, int, slice) v) inline;

;; $MemeCashPool$_store
builder $MemeCashPool$_store(builder build_0, (slice, int) v) inline;

;; $MemeCashPool$_load
(slice, ((slice, int))) $MemeCashPool$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $MemeCrashChild$init$_store
builder $MemeCrashChild$init$_store(builder build_0, (slice, slice) v) inline;

;; $MemeCashPool$_contract_init
(slice, int) $MemeCashPool$_contract_init() impure inline_ref;

;; $MemeCashPool$_contract_load
(slice, int) $MemeCashPool$_contract_load() impure inline_ref;

;; $MemeCashPool$_contract_store
() $MemeCashPool$_contract_store((slice, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $MemeCrashChild$_init_child
(cell, cell) $MemeCrashChild$_init_child(cell sys', slice $parent, slice $owner) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $MemeCashPool$_fun_myPoolBalance
((slice, int), int) $MemeCashPool$_fun_myPoolBalance((slice, int) $self) impure inline_ref;

;; $MemeCashPool$_fun_getPredictorStoreAddress
((slice, int), slice) $MemeCashPool$_fun_getPredictorStoreAddress((slice, int) $self, slice $address) impure inline_ref;

;; $MemeCashPool$_fun_forward
((slice, int), ()) $MemeCashPool$_fun_forward((slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $MemeCashPool$_fun_notify
((slice, int), ()) $MemeCashPool$_fun_notify((slice, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_body_value_mode_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode_code_data(slice to, cell body, int value, int mode, cell code, cell data) inline;

;; $InternalAddTons$_constructor_amount_origin
((int, slice)) $InternalAddTons$_constructor_amount_origin(int amount, slice origin) inline;

;; $NewPredictionEvent$_constructor_amount_predictionNumber_roundNumber_sender
((int, int, int, slice)) $NewPredictionEvent$_constructor_amount_predictionNumber_roundNumber_sender(int amount, int predictionNumber, int roundNumber, slice sender) inline;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline;

;; $InternalSubTons$_constructor_origin
((slice)) $InternalSubTons$_constructor_origin(slice origin) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
